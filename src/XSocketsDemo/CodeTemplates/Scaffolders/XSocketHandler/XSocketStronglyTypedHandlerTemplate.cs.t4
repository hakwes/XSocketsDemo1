<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>

using XSockets.Core.Globals;
using XSockets.Core.XSocket;
using XSockets.Core.XSocket.Event.Attributes;
using XSockets.Core.XSocket.Interface;
using XSockets.Core.XSocket.Helpers;
using XSockets.Plugin.Framework.Attributes;

namespace <#= Model.Namespace #>
{
  [Export(typeof(IXBaseSocket))]
  [XBaseSocketMetadata("<#= Model.HandlerName #>", Constants.GenericTextBufferSize)]
  public class <#= Model.HandlerName #> : XBaseSocket
  {
      public <#= Model.HandlerName #>(){}      

      [HandlerEvent("On<#= Model.HandlerName #>Message")]
      public void On<#= Model.HandlerName #>Message(<#= Model.ModelName #> model)
      {
          //Do some persistence or whatever...            
          //The row below makes no sense, it just an example of modelbinding :)  
          this.SendToAll(model,"On<#= Model.HandlerName #>Message"); 
      }
      public override IXBaseSocket NewInstance()
      {
          return new <#= Model.HandlerName #>();
      }
  }  
}